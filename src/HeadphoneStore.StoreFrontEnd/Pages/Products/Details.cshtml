@page "{productSlug}"
@using HeadphoneStore.Shared.Dtos.Product
@model HeadphoneStore.StoreFrontEnd.Pages.Products.DetailsModel
@{
    ViewData["Title"] = "Details";
}

@section Styles {
    <link href="@Url.Content("~/css/application/product/details.css")" rel="stylesheet" type="text/css"
          asp-append-version="true"/>

    <link href="@Url.Content("~/css/components/carousel.css")" rel="stylesheet" type="text/css"
          asp-append-version="true"/>
}

@section Scripts {
    <script>
        const mediaImages = @Html.Raw(Json.Serialize(Model.Product?.Media ?? new List<ProductMediaDto>()));

        if (mediaImages && mediaImages.length > 0) {
            const swiper = new Swiper(".mySwiper", {
                allowTouchMove: false,
                loop: true,
                effect: "fade",
                fadeEffect: {
                    crossFade: true,
                },
                pagination: {
                    el: ".page-detail-current-image-pagination-wrapper",
                    clickable: true,
                    renderBullet: function (index, className) {
                        const image = mediaImages[index];
                        return `
                            <div class="page-detail-current-image-pagination-item-wrapper ${className}">
                                <div class="page-detail-current-image-pagination-item-container">
                                    <img src="${image.imageUrl}" 
                                         alt="${image.name}" 
                                         class="page-detail-current-image-pagination-item"
                                         aria-label="Show slide ${index + 1}"/>
                                </div>
                            </div>`;
                    },
                },
                preloadImages: true,
                updateOnImagesReady: true,
            });

            swiper.on('init', function () {
                const totalSlides = swiper.slides.length;
                document.querySelectorAll('.page-detail-current-image-pagination-item-wrapper').forEach((bullet, index) => {
                    bullet.setAttribute('aria-label', `Show slide ${index + 1} of ${totalSlides}`);
                    bullet.setAttribute('aria-pressed', index === swiper.realIndex ? 'true' : 'false');
                    bullet.setAttribute('tabindex', index === swiper.realIndex ? '0' : '-1');
                    bullet.classList.toggle('image-active', index === swiper.realIndex);

                    // Ensure custom bullets are clickable
                    bullet.addEventListener('click', () => {
                        swiper.slideToLoop(index);
                    });
                });
            });

            swiper.on('slideChange', function () {
                document.querySelectorAll('.page-detail-current-image-pagination-item-wrapper').forEach((bullet, index) => {
                    bullet.classList.toggle('image-active', index === swiper.realIndex);
                    bullet.setAttribute('aria-pressed', index === swiper.realIndex ? 'true' : 'false');
                    bullet.setAttribute('tabindex', index === swiper.realIndex ? '0' : '-1');
                });
            });
        }

        function decreaseQuantity() {
            const input = document.getElementById('quantity');

            const currentValue = parseInt(input.value);

            if (currentValue > 1) {
                input.value = currentValue - 1;
            }
        }

        function increaseQuantity() {
            const input = document.getElementById('quantity');

            const currentValue = parseInt(input.value);

            const maxValue = parseInt(input.getAttribute('max'));

            if (currentValue < maxValue) {
                input.value = currentValue + 1;
            }
        }
    </script>
}

@if (Model.Product != null)
{
    <div class="page-detail-wrapper">
        <div class="page-detail-container" style="padding-bottom: 4.375rem;">
            <div class="page-detail-breadcrumb-wrapper"></div>

            <section class="page-detail-layout-wrapper">
                <div class="page-detail-image-wrapper">
                    <div class="page-detail-image-container">
                        <div class="swiper mySwiper">
                            <div class="swiper-wrapper">
                                @foreach (var image in Model.Product.Media)
                                {
                                    <img src="@image.ImageUrl" class="swiper-slide page-detail-current-image-container"
                                         alt="@Model.Product.Name"/>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="page-detail-current-image-pagination-wrapper"></div>
                </div>

                <div class="product-detail-side-wrapper">
                    <div class="product-detail-side-container">
                        <a href="/" class="product-brand">@Model.Product.Brand.Name</a>

                        <div class="product-detail-name">
                            <h1>@Model.Product.Name</h1>
                        </div>

                        <div class="product-detail-rating-wrapper">
                            <div class="product-detail-rating-container">
                                <div class="product-detail-rating-overlay" style="padding-left: 0">
                                    <div style="color: #222;
                                            border-bottom: 1px solid #555;
                                            padding-bottom: 1px;
                                            margin-right: 7px;
                                            font-size: 1rem;">
                                        @Model.Product.AverageRating
                                    </div>

                                    @for (var i = 0; i < 5; i++)
                                    {
                                        if (i < Math.Floor((decimal)Model.Product.AverageRating))
                                        {
                                            <i class="bi bi-star-fill product-detail-rating-star product-detail-rating-star-active"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-star-fill product-detail-rating-star"></i>
                                        }
                                    }
                                </div>

                                <div class="product-detail-rating-overlay"
                                     style="border-left: 1px solid rgba(0, 0, 0, .14);">
                                    <div style="border-bottom: 1px solid #555;
                                            color: #222;
                                            font-size: 1rem;
                                            margin-right: 5px;
                                            padding-bottom: 1px;">
                                        @Model.Product.TotalReviews
                                    </div>

                                    <div style="margin-right: 5px;
                                            padding: 4px 0;
                                            color: #767676;
                                            font-size: .875rem;
                                            text-transform: capitalize;">
                                        Dánh Giá
                                    </div>
                                </div>

                                <div class="product-price-wrapper">
                                    <div class="product-price-container">
                                        <div class="product-price-overlay">
                                            <span style="font-size: 20px;">Giá:</span>
                                            <div
                                                class="product-price">@string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:N0}₫", Model.Product.ProductPrice)</div>
                                        </div>
                                    </div>
                                </div>

                                <div class="product-status-container">
                                    <h3 class="product-status-title">Tình trạng sản phẩm:</h3>

                                    @if (Model.Product.Stock > 10)
                                    {
                                        <div class="status-row status-success">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                                                 stroke-width="1.5" stroke="currentColor" class="status-icon">
                                                <path stroke-linecap="round" stroke-linejoin="round"
                                                      d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                            </svg>

                                            <span>In Stock (@Model.Product.Stock available)</span>
                                        </div>
                                    }
                                    else if (Model.Product.Stock > 0)
                                    {
                                        <div class="status-row status-warning">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                                                 stroke-width="1.5" stroke="currentColor" class="status-icon">
                                                <path stroke-linecap="round" stroke-linejoin="round"
                                                      d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z"/>
                                            </svg>

                                            <span>Low Stock (Only @Model.Product.Stock left)</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="status-row status-danger">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                                                 stroke-width="1.5" stroke="currentColor" class="status-icon">
                                                <path stroke-linecap="round" stroke-linejoin="round"
                                                      d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636"/>
                                            </svg>

                                            <span>Out of Stock</span>
                                        </div>
                                    }
                                </div>

                                <!-- Add to Cart Form -->
                                <form method="post" class="mb-8">
                                    <div class="quantity-container">
                                        <label for="quantity" class="quantity-label">Số Lượng:</label>

                                        <div class="quantity-input-wrapper">
                                            <button type="button" class="quantity-btn left"
                                                    onclick="decreaseQuantity()">
                                                <svg viewBox="0 0 10 10" x="0" y="0">
                                                    <polygon
                                                        points="4.5 4.5 3.5 4.5 0 4.5 0 5.5 3.5 5.5 4.5 5.5 10 5.5 10 4.5"></polygon>
                                                </svg>
                                            </button>

                                            <input type="number" id="quantity" name="quantity" value="1" min="1"
                                                   max="@Model.Product.Stock"
                                                   class="quantity-input" readonly/>

                                            <button type="button" class="quantity-btn right"
                                                    onclick="increaseQuantity()">
                                                <svg viewBox="0 0 10 10" x="0" y="0">
                                                    <polygon
                                                        points="10 4.5 5.5 4.5 5.5 0 4.5 0 4.5 4.5 0 4.5 0 5.5 4.5 5.5 4.5 10 5.5 10 5.5 5.5 10 5.5"></polygon>
                                                </svg>
                                            </button>
                                        </div>
                                    </div>

                                    <input type="hidden" name="productId" value="@Model.Product.Id"/>

                                    <input type="hidden" name="productSlug" value="@Model.Product.Slug"/>

                                    <div class="product-add-to-cart-wrapper">
                                        <button type="submit"
                                                class="product-add-to-cart-container w-full @(Model.Product.Stock <= 0 ? "opacity-50 cursor-not-allowed" : "")"
                                                asp-page-handler="AddToCart"
                                                disabled="@(Model.Product.Stock <= 0)"
                                        >
                                            @if (Model.Product.Stock <= 0)
                                            {
                                                <span>Out of Stock</span>
                                            }
                                            else
                                            {
                                                <i class="bi bi-cart-fill"></i>
                                                <span>Thêm Vào Giỏ Hàng</span>
                                            }
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            <section class="product-description-wrapper">
                <div class="product-description-container">
                    <h2 class="product-description-title">MÔ TẢ SẢN PHẨM</h2>
                    <div class="product-description-text">@Model.Product.Description</div>
                </div>
            </section>

            <section class="product-rating-section-wrapper">
                <div class="product-rating-section-title-wrapper">
                    <div class="product-rating-section-title">Bình luận về @Model.Product.Name</div>
                </div>

                <div class="rating-form-container col-md-4 border-start">
                    <form method="post">
                        <h4 class="text-center">Viết đánh giá của bạn</h4>
                        
                        <input type="hidden" name="productId" value="@Model.Product.Id"/>

                        <input type="hidden" name="productSlug" value="@Model.Product.Slug"/>

                        <div class="mb-3">
                            <p class="form-label">Đánh giá</p>

                            <div class="star-rating animated-stars">
                                <input type="hidden" name="productId" value="@Model.Product.Id"/>
                                <input type="radio" name="rating" id="star5" value="5">
                                <label for="star5" class="bi bi-star-fill"><span hidden>5</span></label>
                                <input type="radio" name="rating" id="star4" value="4">
                                <label for="star4" class="bi bi-star-fill"><span hidden>4</span></label>
                                <input type="radio" name="rating" id="star3" value="3">
                                <label for="star3" class="bi bi-star-fill"><span hidden>3</span></label>
                                <input type="radio" name="rating" id="star2" value="2">
                                <label for="star2" class="bi bi-star-fill"><span hidden>2</span></label>
                                <input type="radio" name="rating" id="star1" value="1">
                                <label for="star1" class="bi bi-star-fill"><span hidden>1</span></label>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Nội dung đánh giá
                                <textarea class="form-control" name="comment" rows="4"></textarea>
                            </label>
                        </div>

                        <button type="submit" asp-page-handler="RatingProduct" class="btn btn-primary mt-2">Gửi đánh
                            giá
                        </button>
                    </form>
                </div>

                <div class="feedback-list">
                    @if (Model.Product.Rating.Any())
                    {
                        @foreach (var rating in Model.Product.Rating)
                        {
                            <div class="feedback-item">
                                <div class="feedback-header">
                                    <div class="feedback-avatar">
                                        <img src="/images/avatar/noavatar.jpg" alt="@rating.CustomerName">
                                    </div>
                                    
                                    <div>
                                        <h5 class="feedback-customer">@rating.CustomerName</h5>
                                        <div class="feedback-stars">
                                            @for (int i = 0; i < int.Parse(rating.RatingValue); i++)
                                            {
                                                <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                                     class="w-5 h-5" viewBox="0 0 20 20">
                                                    <path
                                                        d="M10 15.27l6.18 3.73-1.64-7.03 5.45-4.73-7.19-.61L10 0 8.2 7.63l-7.19.61 5.45 4.73-1.64 7.03L10 15.27z"></path>
                                                </svg>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <p class="feedback-comment">@rating.Comment</p>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="no-reviews">
                            No customer reviews yet.
                        </div>
                    }
                </div>
            </section>
        </div>
    </div>
}
else
{
    @await Html.PartialAsync("Shared/_NoProductWasFound")
}
